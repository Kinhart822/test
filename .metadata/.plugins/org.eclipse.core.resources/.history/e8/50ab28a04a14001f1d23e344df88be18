/*
*(C) Copyright 2021 Fresher Academy. All Rights Reserved.
*
* @author: Phạm Hoàng Anh
* @date: Dec 8, 2023
*/

package fa.training.utils;
import fa.training.problem03.dao.*;
import fa.training.problem03.models.Order;
import fa.training.problem03.models.OrderDetail;

import java.sql.SQLOutput;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.sql.SQLException;
import java.util.Map;
import java.util.Scanner;

public class Main {
	OrderDAO orderDAO = new OrderDAOImpl();
	OrderDetailDAO orderDetailDAO = new OrderDetailDAOImpl();


	public static void main(String[] args) throws ClassNotFoundException, SQLException {
		Scanner input = new Scanner(System.in);
		Main management = new Main();

	    boolean flag = true;
	    while (flag) {
		    showMenu();
		    System.out.println("Enter your's choice");
		    int choice = input.nextInt();
	
			switch (choice) {
		        case 1: {
		        	String dateString = input.next(); 
		        	String dateString1 = input.next(); 
		    		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		    		java.util.Date parsedDate = null;
		    		java.util.Date parsedDate1 = null;
		    		try {
		    			parsedDate = sdf.parse(dateString);
		    			parsedDate1 = sdf.parse(dateString1);
		    		} catch (ParseException e) {
		    			e.printStackTrace();
		    		}
		    		java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());
		    		java.sql.Date sqlDate1 = new java.sql.Date(parsedDate.getTime());
		        	Order order = new Order();
		        	order.setOrderId(4); 
		        	order.setCustomerId("22BI");
		        	order.setRequiredDate(sqlDate);
		        	order.setShippedDate(sqlDate1);
		        	order.setShipAddress("123 Lac Long Quan");
		        	management.orderDAO.saveOrder(order);
		            break;
			    }
			    case 2: {
			    	System.out.println("Enter customer ID");
			    	String customerID = input.next();
			        management.orderDAO.findOrderByCustomer(customerID);
			        break;
			    }
			    case 3: {
                    OrderDetail orderDetail = new OrderDetail();
			    	management.orderDetailDAO.saveOrderDetail(orderDetail);
		            break;
			    }
			    case 4: {
			        Map<String, Double> total = management.orderDetailDAO.reportOfSale();
			        System.out.println("reportOfSale: " + total);
			        break;
			    }
			    case 5: {
			    	flag = false;
			    	break;
			    }
			    default: {
		            System.out.println("Invalid choice! Please choose again.");
		            break;
		        }
			}
	    }
	}


	    private static void showMenu() {
	        System.out.println("1. Create a new order");
	        System.out.println("2. Create a new order detail");
	        System.out.println("3. Total money");
	        System.out.println("4. List order");
	        System.out.println("5) Exit application");
	    }
	    



}
